name: test
run-name: test ${{ github.actor }}
on:
    push:
      branches:
        - master
    pull_request:
      types: 
       - opened
       - synchronize
       - reopened
jobs:
    build:
      name: JDK Builing
      runs-on: ubuntu-latest  
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '16'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              ${{ runner.os }}-maven-
              ${{ runner.os }}
      - name: Building 
        run : mvn clean install
    sonarqube-test:
      name:  SonarQube Test
      needs:
      -  build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '16'
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              ${{ runner.os }}-maven-
              ${{ runner.os }}

        env:
            PUBLIC_IP: ${{ vars.PUBLIC_IP }} 
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=home-testing-user-java