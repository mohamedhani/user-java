name: test
run-name: test ${{ github.actor }}
on:
    push:
        branches:
        - develop
    pull_request:
      branches:
      - master
      types: 
      - opened
      - synchronize
      - reopened
jobs:
    build:
      name: JDK Builing
      runs-on: ubuntu-latest  
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '16'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              ${{ runner.os }}-maven-
              ${{ runner.os }}
      - name: Building 
        run : mvn clean install
    
    unit-test:
      needs:
      -  build
      name: Unit Test
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '16'
      - name: Setup Maven Action
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              ${{ runner.os }}-maven-
              ${{ runner.os }}
      - name: Run Tests
        run : mvn test
    # Check the Quality Gate status.
    sonarqube-test:
      name:  SonarQube Test
      if : github.event_name == 'pull_request'
      needs:
      -  build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '16'
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              ${{ runner.os }}-maven-
              ${{ runner.os }}

        env:
            PUBLIC_IP: ${{ vars.PUBLIC_IP }} 
    #   - name: Build and analyze
    #     env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=home-testing-user-java
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}